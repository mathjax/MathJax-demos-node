#! /usr/bin/env -S node -r esm

/*************************************************************************
 *
 *  jsdom/tex2chtml-page
 *
 *  Uses MathJax v3 to convert all TeX in an HTML document using JSDOM.
 *
 * ----------------------------------------------------------------------
 *
 *  Copyright (c) 2020 The MathJax Consortium
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

//
//  The default TeX packages to use
//
const PACKAGES = 'base, autoload, require, ams, newcommand';

//
//  Get the command-line arguments
//
const argv = require('yargs')
  .demand(0).strict()
  .usage('$0 [options] file.html > converted.html')
  .options({
    em: {
      default: 16,
      describe: 'em-size in pixels'
    },
    ex: {
      default: 8,
      describe: 'ex-size in pixels'
    },
    packages: {
      default: PACKAGES,
      describe: 'the packages to use, e.g. "base, ams"; use "*" to represent the default packages, e.g, "*, bbox"'
    },
    fontURL: {
      default: 'https://cdn.jsdelivr.net/npm/mathjax@3/es5/output/chtml/fonts/woff-v2',
      describe: 'the URL to use for web fonts'
    },
    dist: {
      boolean: true,
      default: false,
      describe: 'true to use webpacked version, false to use MathJax source files'
    }
  })
  .argv;

//
//  Read the HTML file
//
const htmlfile = require('fs').readFileSync(argv._[0], 'utf8');

//
// Load MathJax and initialize MathJax and typeset the given math
//
require('mathjax-full').init({
  //
  //  The MathJax configuration
  //
  loader: {
    paths: {jsdom: `${__dirname}/adaptor`},
    source: (argv.dist ? {} : require('mathjax-full/components/src/source.js').source),
    load: ['[jsdom]/adaptor' + (argv.dist ? '.min.js' : ''), 'tex-chtml']
  },
  JSDOM: require('jsdom').JSDOM,
  tex: {
    packages: argv.packages.replace('\*', PACKAGES).split(/\s*,\s*/)
  },
  chtml: {
    fontURL: argv.fontURL,
    exFactor: argv.ex / argv.em
  },
  'adaptors/liteDOM': {
    fontSize: argv.em
  },
  startup: {
    document: htmlfile
  }
}).then((MathJax) => {
  //
  //  Display the output
  //
  const adaptor = MathJax.startup.adaptor;
  const html = MathJax.startup.document;
  if (Array.from(html.math).length === 0) adaptor.remove(html.outputJax.chtmlStyles);
  console.log(adaptor.doctype(html.document));
  console.log(adaptor.outerHTML(adaptor.root(html.document)));
}).catch(err => console.log(err));
