#! node

/*************************************************************************
 *
 *  cjs/component/mml2chtml
 *
 *  Uses MathJax v4 to convert a MathML string to an HTML string.
 *
 * ----------------------------------------------------------------------
 *
 *  Copyright (c) 2019-2025 The MathJax Consortium
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

//
// Load the needed utilities.
//
const {Util} = require('../util/Util.js');
const {Mml} = require('../util/Mml.js');
const {Chtml} = require('../util/Chtml.js');
const {Sre} = require('../util/Sre.js');

//
// Get the command-line arguments.
//
const args = Util.args('"math" > file.html', [Mml.input, Chtml, Sre]);

//
// Set up the MathJax configuration.
//
global.MathJax = {
  loader:  Util.config.loader(['adaptors/liteDOM'], args),
  options: Util.config.options(args),
  startup: Util.config.startup(args),
  mml:     Mml.input.config(args),
  chtml:   Chtml.config(args),
  'adaptors/liteDOM': Util.config.adaptor(args),
};

//
// Load the needed components.
//
Util.load('mml-chtml', args);

//
// Typeset the math and print the result.
// Then tell MathJax we are done.
//
Util.typeset(args, Chtml)
  .then((output) => console.log(output))
  .then(() => MathJax.done());
