#! node

/*************************************************************************
 *
 *  cjs/mixed/tex2mml
 *
 *  Uses MathJax v4 to convert a TeX string to a MathML string.
 *
 * ----------------------------------------------------------------------
 *
 *  Copyright (c) 2025 The MathJax Consortium
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

//
// Load the packages needed for MathJax.
//
const {Loader} = require('@mathjax/src/js/components/loader.js');
const {TeX} = require('@mathjax/src/js/input/tex.js');

//
// Load the associated components and mark them as loaded.
//
require('@mathjax/src/components/js/input/tex/tex.js');
Loader.preLoaded('input/tex');

//
// Load the needed utilities.
//
const {Mixed} = require('../util/Mixed.js');
const {Util} = require('../util/Util.js');
const {Tex} = require('../util/Tex.js');
const {Mml} = require('../util/Mml.js');

//
// Get the command-line arguments.
//
const args = Util.args('"math"', [Tex, Mml.output, Mixed], false);

//
// Create the input jax.
//
const tex = new TeX(Tex.config(args));

//
// Create the MathDocument with the input and output jax.
//
const document = Mixed.document(tex, null, args);

//
// Typeset the math and print the result.
//
Util.typeset(args, Mml, document)
  .then((output) => console.log(output));
