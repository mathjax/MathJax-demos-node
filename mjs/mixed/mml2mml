#! node

/*************************************************************************
 *
 *  mjs/mixed/mml2mml
 *
 *  Uses MathJax v4 to convert a MathML string to an SVG string.
 *
 * ----------------------------------------------------------------------
 *
 *  Copyright (c) 2025 The MathJax Consortium
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

//
// Load the packages needed for MathJax.
//
import {Loader} from '@mathjax/src/js/components/loader.js';
import {MathML} from '@mathjax/src/js/input/mathml.js';

//
// Load the associated components and mark them as loaded.
//
import '@mathjax/src/components/js/input/mml/mml.js';
Loader.preLoaded('input/mathml');

//
// Load the needed utilities.
//
import {Mixed} from '../util/Mixed.js';
import {Util} from '../util/Util.js';
import {Mml} from '../util/Mml.js';

//
// Get the command-line arguments.
//
const args = await Util.args('"math"', [Mml.input, Mml.output, Mixed], false);

//
// Create the input jax.
//
const mml = new MathML(Mml.input.config(args));

//
// Create the MathDocument with the input and output jax.
//
const document = Mixed.document(mml, null, args);
  
//
// Typeset the math and print the result.
//
console.log(await Util.typeset(args, Mml, document));
